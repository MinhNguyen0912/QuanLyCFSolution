@page "/password"
@using System.Security.Claims;
@using QLCF.Repositories.Interfaces;

<AuthorizeView Roles="admin,staff">
    <Authorized>
        <div class="box fadeInDown" style="height: 90vh;">
            <div style="width: 50%;margin-top: 70px;" class="table_box container text-center">

                <div style="margin-top: 20px; display: flex;">
                    <span style="margin-right: 20px;width: 110px;display: block;">Tên tài khoản:</span>
                    <p>@context.User.FindFirst("Name").Value</p>
                </div>
                <div style="margin-top: 20px; display: flex;">
                    <span style="margin-right: 20px;width: 110px;display: block;">Mật khẩu mới:</span>
                    <input @bind-value="_newUserPassword" style="width: 320px;" type="password">
                </div>
                <div style="margin: 20px 80px 40px 0;display: flex;justify-content: flex-end;">
                    <div @onclick="()=>UpdateUser(context.User)" style="min-width: 120px;" class="button wood">
                        <div>Thay đổi</div>
                    </div>
                </div>
            </div>
        </div>
        <Toasts class="p-3" Messages="messages" AutoHide="true" Delay="2000" Placement="ToastsPlacement.TopLeft" />

    </Authorized>
</AuthorizeView>

@code {
    [Inject]
    private IUserRepos _userRepos { get; set; }
    private string _newUserPassword = "";
    private async Task UpdateUser(ClaimsPrincipal claims)
    {
        var userName = claims.FindFirst("Name").Value;
        var user = await _userRepos.GetUserByUserName(userName);
        if (_newUserPassword == "")
        {
            messages.Add(CreateToastFillInfo(ToastType.Warning));
            return;
        }
        var result = await _userRepos.Update(user.UserName, _newUserPassword);
        if (result)
        {

            messages.Add(CreateToastUpdateSuccess(ToastType.Success));
        }
        else
        {
            messages.Add(CreateToastUpdateFail(ToastType.Success));

        }
    }
    List<ToastMessage> messages = new List<ToastMessage>();

    private ToastMessage CreateToastUpdateSuccess(ToastType toastType)
       => new ToastMessage
       {
           Type = toastType,
           Title = "Thông báo",
           HelpText = $"{DateTime.Now}",
           Message = $"Cập nhật thành công",
       };
    private ToastMessage CreateToastUpdateFail(ToastType toastType)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Thông báo",
            HelpText = $"{DateTime.Now}",
            Message = $"Cập nhật thất bại. Vui lòng kiểm tra lại mật khẩu mới!",
        };
    private ToastMessage CreateToastFillInfo(ToastType toastType)
    => new ToastMessage
    {
        Type = toastType,
        Title = "Lưu ý",
        HelpText = $"{DateTime.Now}",
        Message = $"Vui lòng nhập đầy đủ thông tin",
    };
}
